{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\TherapyPlatformSravya\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roleParams = ['therapist', 'practice-manager', 'billing-staff', 'admin-staff', 'executive', 'hr'];\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), roleParams.map(rp => {\n        // Convert 'practice-manager' → 'Practice Manager'\n        const roleName = rp.split('-').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' ');\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: `/dashboard/${rp}`,\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            allowedRoles: [roleName],\n            children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, rp, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Navigate","Register","Login","Dashboard","ProtectedRoute","jsxDEV","_jsxDEV","roleParams","App","children","index","element","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","path","map","rp","roleName","split","w","charAt","toUpperCase","slice","join","allowedRoles","_c","$RefreshReg$"],"sources":["D:/Work/TherapyPlatformSravya/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\r\n\r\nimport Register from './pages/Register';\r\nimport Login    from './pages/Login';\r\nimport Dashboard from './pages/Dashboard';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\n\r\nconst roleParams = [\r\n  'therapist',\r\n  'practice-manager',\r\n  'billing-staff',\r\n  'admin-staff',\r\n  'executive',\r\n  'hr'\r\n];\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        {/* Index: redirect '/' to '/login' */}\r\n        <Route index element={<Navigate to=\"/login\" replace />} />\r\n        <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\r\n\r\n        {/* Public routes */}\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/login\"    element={<Login />} />\r\n\r\n        {/* Protected dashboard per role */}\r\n        {roleParams.map((rp) => {\r\n          // Convert 'practice-manager' → 'Practice Manager'\r\n          const roleName = rp\r\n            .split('-')\r\n            .map(w => w.charAt(0).toUpperCase() + w.slice(1))\r\n            .join(' ');\r\n          return (\r\n            <Route\r\n              key={rp}\r\n              path={`/dashboard/${rp}`}\r\n              element={\r\n                <ProtectedRoute allowedRoles={[roleName]}>\r\n                  <Dashboard />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n          );\r\n        })}\r\n\r\n        {/* Catch-all: any other path redirects to login */}\r\n        <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAEzE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,MAAS,eAAe;AACpC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAG,CACjB,WAAW,EACX,kBAAkB,EAClB,eAAe,EACf,aAAa,EACb,WAAW,EACX,IAAI,CACL;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,oBACEF,OAAA,CAACT,aAAa;IAAAY,QAAA,eACZH,OAAA,CAACR,MAAM;MAAAW,QAAA,gBAELH,OAAA,CAACP,KAAK;QAACW,KAAK;QAACC,OAAO,eAAEL,OAAA,CAACN,QAAQ;UAACY,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DX,OAAA,CAACP,KAAK;QAACmB,IAAI,EAAC,GAAG;QAACP,OAAO,eAAEL,OAAA,CAACN,QAAQ;UAACY,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG7DX,OAAA,CAACP,KAAK;QAACmB,IAAI,EAAC,WAAW;QAACP,OAAO,eAAEL,OAAA,CAACL,QAAQ;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDX,OAAA,CAACP,KAAK;QAACmB,IAAI,EAAC,QAAQ;QAAIP,OAAO,eAAEL,OAAA,CAACJ,KAAK;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG7CV,UAAU,CAACY,GAAG,CAAEC,EAAE,IAAK;QACtB;QACA,MAAMC,QAAQ,GAAGD,EAAE,CAChBE,KAAK,CAAC,GAAG,CAAC,CACVH,GAAG,CAACI,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAChDC,IAAI,CAAC,GAAG,CAAC;QACZ,oBACErB,OAAA,CAACP,KAAK;UAEJmB,IAAI,EAAE,cAAcE,EAAE,EAAG;UACzBT,OAAO,eACLL,OAAA,CAACF,cAAc;YAACwB,YAAY,EAAE,CAACP,QAAQ,CAAE;YAAAZ,QAAA,eACvCH,OAAA,CAACH,SAAS;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QACjB,GANIG,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOR,CAAC;MAEN,CAAC,CAAC,eAGFX,OAAA,CAACP,KAAK;QAACmB,IAAI,EAAC,GAAG;QAACP,OAAO,eAAEL,OAAA,CAACN,QAAQ;UAACY,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACY,EAAA,GArCuBrB,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}