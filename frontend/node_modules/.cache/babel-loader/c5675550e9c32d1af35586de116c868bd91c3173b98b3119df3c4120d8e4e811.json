{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\TherapyPlatformSravya\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children,\n  allowedRoles\n}) {\n  _s();\n  var _payload, _payload$sub;\n  const token = localStorage.getItem('token');\n  const location = useLocation();\n  // const { role: paramRole } = useParams();\n\n  if (!token) {\n    // Not logged in\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  let payload;\n  try {\n    payload = JSON.parse(atob(token.split('.')[1]));\n  } catch {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  // JWT-Extended v4 puts your identity in `sub`\n  const userRole = (_payload = payload) === null || _payload === void 0 ? void 0 : (_payload$sub = _payload.sub) === null || _payload$sub === void 0 ? void 0 : _payload$sub.role;\n  const normalized = userRole === null || userRole === void 0 ? void 0 : userRole.toLowerCase().replace(/ /g, '-');\n\n  // If the URL param doesn't match your actual role, kick them out\n  // if (!allowedRoles.map(r => r.toLowerCase()).includes(normalized)) {\n  //   return <Navigate to=\"/login\" replace />;\n  // }\n  const allowedSlugs = allowedRoles.map(r => r.toLowerCase().replace(/ /g, '-'));\n  if (!allowedSlugs.includes(normalized)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n}\n_s(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useParams","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","_payload","_payload$sub","token","localStorage","getItem","location","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","payload","JSON","parse","atob","split","userRole","sub","role","normalized","toLowerCase","allowedSlugs","map","r","includes","_c","$RefreshReg$"],"sources":["D:/Work/TherapyPlatformSravya/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation, useParams } from 'react-router-dom';\r\n\r\nexport default function ProtectedRoute({ children, allowedRoles }) {\r\n  const token = localStorage.getItem('token');\r\n  const location = useLocation();\r\n  // const { role: paramRole } = useParams();\r\n\r\n  if (!token) {\r\n    // Not logged in\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  let payload;\r\n  try {\r\n    payload = JSON.parse(atob(token.split('.')[1]));\r\n  } catch {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // JWT-Extended v4 puts your identity in `sub`\r\n  const userRole = payload?.sub?.role;\r\n  const normalized = userRole?.toLowerCase().replace(/ /g, '-');\r\n\r\n  // If the URL param doesn't match your actual role, kick them out\r\n  // if (!allowedRoles.map(r => r.toLowerCase()).includes(normalized)) {\r\n  //   return <Navigate to=\"/login\" replace />;\r\n  // }\r\n  const allowedSlugs = allowedRoles\r\n    .map(r => r.toLowerCase().replace(/ /g, '-'));\r\n  if (!allowedSlugs.includes(normalized)) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return children;\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,eAAe,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,QAAA,EAAAC,YAAA;EACjE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B;;EAEA,IAAI,CAACU,KAAK,EAAE;IACV;IACA,oBAAOP,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEH;MAAS,CAAE;MAACI,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,IAAIC,OAAO;EACX,IAAI;IACFA,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACf,KAAK,CAACgB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC,MAAM;IACN,oBAAOvB,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,MAAMM,QAAQ,IAAAnB,QAAA,GAAGc,OAAO,cAAAd,QAAA,wBAAAC,YAAA,GAAPD,QAAA,CAASoB,GAAG,cAAAnB,YAAA,uBAAZA,YAAA,CAAcoB,IAAI;EACnC,MAAMC,UAAU,GAAGH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,WAAW,CAAC,CAAC,CAACd,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;;EAE7D;EACA;EACA;EACA;EACA,MAAMe,YAAY,GAAG1B,YAAY,CAC9B2B,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACH,WAAW,CAAC,CAAC,CAACd,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;EAC/C,IAAI,CAACe,YAAY,CAACG,QAAQ,CAACL,UAAU,CAAC,EAAE;IACtC,oBAAO3B,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,OAAOhB,QAAQ;AACjB;AAACE,EAAA,CAhCuBH,cAAc;EAAA,QAEnBJ,WAAW;AAAA;AAAAoC,EAAA,GAFNhC,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}